# Copy of replay
replay

# record the same information
record

# record with a direct reference, make sure it works
record_no_rcfile

# Don't store object instances across tests
record2tests

# Capture the tests in the same file by setting default values
record2tests_set_defaults

# Check we can add filtering to whatever is produced in the file, and hence change the result...
alter_response

# Check the filtering can handle regexps and replacements
alter_response_regexp

# Check we can add filtering to whatever is produced in the file, and hence change the result. Check it works to remove things
alter_response_remove

# If we return e.g. datetime.datetime we shouldn't be intercepting it
object_not_intercepted

# Check we can call methods in objects that are attributes of the module
object_as_attribute

# Check it works if getting the attribute creates new objects...
attribute_new_objects

# Check we can read attributes of attributes
composite_attribute

# Check we can assign attributes to stored objects
attribute_assignment

# What happens if objects that can't be reconstructed are passed as arguments
unusable_object_args
iteration

# Check how we handle 'if x' on intercepted objects
nonzero_logic

# static attributes, method calls etc
static_calls

# If we assign stuff in an intercepted function, need to do something with this
side_effects

# Check we can handle standard collections containing objects
collections

# Tests for inheritance across the interception boundary
intercept_base_class

# Make sure we can handle callbacks across an interception boundary
callbacks
