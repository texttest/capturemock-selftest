# If we return an object that lives in a submodule we should be intercepting it
object_in_submodule

# If we intercept the parent package, we should pick up stuff when the module is directly imported
intercept_parent_replay

# If we intercept the parent package, we should pick up stuff when the module is directly imported
intercept_parent_record

# If we intercept the parent package, we should pick up stuff when the module is directly imported. And the second test should work properly...
intercept_parent_2tests

# If we intercept the parent package, we should pick up stuff when the module is directly imported. Also
# if this has already happened
intercept_parent_prev_import

# Check we can intercept just a submodule
intercept_submodule

# If we import a submodule indirectly from an import of something else we are intercepting,
# need to include it properly
submodule_import_in_other

# Reimporting a submodule of an intercepted module can cause trouble
reimport_submodule

# Pass a class itself (defined in a subpackage) as an argument, handle callbacks
class_arguments
